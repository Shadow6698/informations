local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

-- Criar GUI
local gui = Instance.new("ScreenGui", game.CoreGui)
local frame = Instance.new("Frame", gui)
frame.Position = UDim2.new(0.3, 0, 0.3, 0)
frame.Size = UDim2.new(0, 320, 0, 300)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.Active = true
frame.Draggable = true

local box = Instance.new("TextBox", frame)
box.PlaceholderText = "Nome do jogador (no servidor)"
box.Position = UDim2.new(0, 10, 0, 10)
box.Size = UDim2.new(0, 300, 0, 30)
box.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
box.TextColor3 = Color3.fromRGB(255, 255, 255)
box.ClearTextOnFocus = false

local button = Instance.new("TextButton", frame)
button.Text = "Ativar"
button.Position = UDim2.new(0, 10, 0, 50)
button.Size = UDim2.new(0, 300, 0, 30)
button.BackgroundColor3 = Color3.fromRGB(80, 0, 0)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.Font = Enum.Font.SourceSansBold
button.TextSize = 18

local info = Instance.new("TextLabel", frame)
info.Position = UDim2.new(0, 10, 0, 90)
info.Size = UDim2.new(0, 300, 0, 200)
info.BackgroundTransparency = 1
info.TextColor3 = Color3.fromRGB(255, 255, 255)
info.TextWrapped = true
info.TextScaled = false
info.TextYAlignment = Enum.TextYAlignment.Top
info.TextXAlignment = Enum.TextXAlignment.Left
info.Font = Enum.Font.SourceSans
info.TextSize = 15
info.Text = "Informa√ß√µes aqui"

local function diasDesde(data)
	local agora = os.time()
	local criado = os.time({
		year = data.year,
		month = data.month,
		day = data.day
	})
	return math.floor((agora - criado) / (60 * 60 * 24))
end

button.MouseButton1Click:Connect(function()
	local nome = box.Text
	if nome == "" then
		info.Text = "Digite o nome de um jogador."
		return
	end

	local jogador = Players:FindFirstChild(nome)
	if not jogador then
		info.Text = "Jogador n√£o est√° no servidor."
		return
	end

	local userId = jogador.UserId

	local success, dados = pcall(function()
		local res = game:HttpGet("https://users.roblox.com/v1/users/" .. userId)
		return HttpService:JSONDecode(res)
	end)

	if success and dados then
		local data = dados.created:sub(1, 10)
		local y, m, d = data:match("(%d+)%-(%d+)%-(%d+)")
		local dias = diasDesde({year=tonumber(y), month=tonumber(m), day=tonumber(d)})

		-- Contador de amigos
		local friendsCount = "?"
		local successFriends, friendsData = pcall(function()
			return HttpService:JSONDecode(game:HttpGet("https://friends.roblox.com/v1/users/" .. userId .. "/friends/count"))
		end)
		if successFriends and friendsData.count then
			friendsCount = friendsData.count
		end

		-- Seguidores
		local followersCount = "?"
		local successFollowers, followersData = pcall(function()
			return HttpService:JSONDecode(game:HttpGet("https://friends.roblox.com/v1/users/" .. userId .. "/followers/count"))
		end)
		if successFollowers and followersData.count then
			followersCount = followersData.count
		end

		-- Seguindo
		local followingCount = "?"
		local successFollowing, followingData = pcall(function()
			return HttpService:JSONDecode(game:HttpGet("https://friends.roblox.com/v1/users/" .. userId .. "/followings/count"))
		end)
		if successFollowing and followingData.count then
			followingCount = followingData.count
		end

		-- Descri√ß√£o (bio)
		local bio = dados.description or "Sem descri√ß√£o."

		-- Resultado final
		info.Text = "üßë Nome Real: " .. dados.name ..
					"\nüé≠ Nome de Exibi√ß√£o: " .. dados.displayName ..
					"\nüìÖ Criado em: " .. d .. "/" .. m .. "/" .. y ..
					"\n‚è≥ Dias desde cria√ß√£o: " .. dias ..
					"\nüë• Amigos: " .. friendsCount ..
					"\nüë£ Seguidores: " .. followersCount ..
					"\n‚û°Ô∏è Seguindo: " .. followingCount ..
					"\nüìù Descri√ß√£o:\n" .. bio
	else
		info.Text = "Erro ao buscar dados do jogador."
	end
end)
